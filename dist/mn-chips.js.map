{"version":3,"sources":["scripts/mn-chips.class.js"],"names":["MnChips","self","_this","_ret","_classCallCheck","this","classList","add","input","querySelector","name","getAttribute","setAddEvents","setValue","_possibleConstructorReturn","value","placeholder","transformValue","transformPlaceholder","valueAlreadyUsed","indexOf","validateChip","option","chips","insertAdjacentHTML","lastOption","setTimeout","checked","dispatchChangeEvent","_this2","document","createElement","appendChild","Array","from","querySelectorAll","forEach","removeChild","addChip","textContent","_this3","addEventListener","trim","replace","split","remove","event","key","preventDefault","Event","dispatchEvent","values","_this4","isArray","innerHTML","options","window","MnInput","customElements","define"],"mappings":"sxCAAMA,QAAAA,SAAAA,iBACJ,QAAAA,SAAYC,MAAM,GAAAC,OAAAC,IAShB,OATgBC,iBAAAC,KAAAL,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,OACbC,MAAKI,UAAUC,IAAI,YACnBL,MAAKM,MAAQN,MAAKO,cAAc,SAChCP,MAAKQ,KAAOR,MAAKS,aAAa,QAC9BT,MAAKU,eAELV,MAAKW,WAELV,KAAOF,KAAPa,2BAAAZ,MAAAC,oGAGMY,MAAOC,aACbD,MAAuC,kBAAxBV,MAAKY,eAChBZ,KAAKY,eAAeF,OACpBA,MAEJC,YAAmD,kBAA9BX,MAAKa,qBACtBb,KAAKa,qBAAqBF,aAC1BA,WAEJ,IAAMG,kBAAmBd,KAAKU,MAAMK,QAAQL,QAAU,EAChDM,aAA4C,kBAAtBhB,MAAKgB,cAC7BhB,KAAKgB,aAAaN,MAGtB,IAAIA,QAAUI,kBAAoBE,aAAc,CAC9CL,YAAcA,YAAAA,eACKA,YACf,EAEJ,IAAMM,QAAAA,uDAEKP,MAFL,oBAGIV,KAAKK,KAHT,cAIFM,YAJE,WAMNX,MAAKkB,MAAMC,mBAAmB,YAAaF,OAC3C,IAAMG,YAAapB,KAAKkB,MAAMd,cAAc,uBAC5CiB,YAAW,WACTD,WAAWE,SAAU,GACpB,GACHtB,KAAKG,MAAMO,MAAQ,GACnBV,KAAKuB,0DAIE,GAAAC,QAAAxB,IACTA,MAAKkB,MAAQO,SAASC,cAAc,OACpC1B,KAAKkB,MAAMjB,UAAUC,IAAI,UACzBF,KAAK2B,YAAY3B,KAAKkB,OAENU,MAAMC,KAAK7B,KAAK8B,iBAAiB,WACzCC,QAAQ,SAAAd,QACdO,OAAKQ,YAAYf,QACjBO,OAAKS,QAAQhB,OAAOP,MAAOO,OAAOiB,eAGpClC,KAAKuB,6DAGQ,GAAAY,QAAAnC,IACbA,MAAKG,MAAMiC,iBAAiB,OAAQ,WACnBD,OAAKhC,MAAMO,MACrB2B,OACAC,QAAQ,YAAa,KACrBC,MAAM,KAEJR,QAAQ,SAAArB,OAAA,MAASyB,QAAKF,QAAQvB,SACrCyB,OAAKlC,UAAUuC,OAAO,aACtBL,OAAKhC,MAAMO,MAAQ,KAGrBV,KAAKG,MAAMiC,iBAAiB,UAAW,SAAAK,QAEnC,QACA,IACA,KAG2B1B,QAAQ0B,MAAMC,MAAQ,IAGlCP,OAAKhC,MAAMO,MACvB2B,OACAC,QAAQ,YAAa,KACrBC,MAAM,KAEFR,QAAQ,SAAArB,OAAA,MAASyB,QAAKF,QAAQvB,SACrC+B,MAAME,kEAMV,GAAMF,OAAQ,GAAIG,OAAM,SACxB5C,MAAK6C,cAAcJ,mCAGXK,QAAQ,GAAAC,QAAA/C,KACVc,iBAAmBd,KAAKU,MAAMK,QAAQ+B,SAAW,CAEnDA,UAAWhC,kBACbgC,OAASlB,MAAMoB,QAAQF,QACnBA,QACCA,QAEL9C,KAAKkB,MAAM+B,UAAY,GACvBH,OAAOf,QAAQ,SAAArB,OAAA,MAASqC,QAAKd,QAAQvB,UAErCV,KAAKG,MAAMO,MAAQ,mBAKrB,GAAMwC,SAAUlD,KAAKI,cAAc,YACnC,OAAO8C,SACHA,QAAQxC,sBAtHMyC,OAAOC,QA2H7BD,QAAOE,eAAeC,OAAO,WAAY3D","file":"mn-chips.js","sourcesContent":["class MnChips extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    this.classList.add('mn-chips')\n    this.input = this.querySelector('input')\n    this.name = this.getAttribute('name')\n    this.setAddEvents()\n\n    this.setValue()\n\n    return self\n  }\n\n  addChip(value, placeholder) {\n    value = typeof this.transformValue === 'function'\n      ? this.transformValue(value)\n      : value\n\n    placeholder = typeof this.transformPlaceholder === 'function'\n      ? this.transformPlaceholder(placeholder)\n      : placeholder\n\n    const valueAlreadyUsed = this.value.indexOf(value) > -1\n    const validateChip = typeof this.validateChip === 'function'\n      ? this.validateChip(value)\n      : true\n\n    if (value && !valueAlreadyUsed && validateChip) {\n      placeholder = placeholder\n        ? `placeholder=${placeholder}`\n        : ''\n\n      const option = `<mn-option\n        class=\"natural\"\n        value=\"${value}\"\n        name=\"${this.name}\"\n        ${placeholder}\n      >`\n      this.chips.insertAdjacentHTML('beforeend', option)\n      const lastOption = this.chips.querySelector('mn-option:last-child')\n      setTimeout(() => {\n        lastOption.checked = true\n      }, 0)\n      this.input.value = ''\n      this.dispatchChangeEvent()\n    }\n  }\n\n  setValue() {\n    this.chips = document.createElement('div')\n    this.chips.classList.add('values')\n    this.appendChild(this.chips)\n\n    const options = Array.from(this.querySelectorAll('option'))\n    options.forEach(option => {\n      this.removeChild(option)\n      this.addChip(option.value, option.textContent)\n    })\n\n    this.dispatchChangeEvent()\n  }\n\n  setAddEvents() {\n    this.input.addEventListener('blur', () => {\n      const values = this.input.value\n          .trim()\n          .replace(/[\\s,]{1,}/, ' ')\n          .split(' ')\n\n      values.forEach(value => this.addChip(value))\n      this.classList.remove('has-value')\n      this.input.value = ''\n    })\n\n    this.input.addEventListener('keydown', event => {\n      const enterKeys = [\n        'Enter',\n        ',',\n        ' ',\n      ]\n\n      const isEnterKey = enterKeys.indexOf(event.key) > -1\n\n      if (isEnterKey) {\n        const values = this.input.value\n          .trim()\n          .replace(/[\\s,]{1,}/, ' ')\n          .split(' ')\n\n        values.forEach(value => this.addChip(value))\n        event.preventDefault()\n      }\n    })\n  }\n\n  dispatchChangeEvent() {\n    const event = new Event('change')\n    this.dispatchEvent(event)\n  }\n\n  set value(values) {\n    const valueAlreadyUsed = this.value.indexOf(values) > -1\n\n    if (values && !valueAlreadyUsed) {\n      values = Array.isArray(values)\n        ? values\n        : [values]\n\n      this.chips.innerHTML = ''\n      values.forEach(value => this.addChip(value))\n    } else {\n      this.input.value = ''\n    }\n  }\n\n  get value() {\n    const options = this.querySelector('mn-option')\n    return options\n      ? options.value\n      : []\n  }\n}\n\nwindow.customElements.define('mn-chips', MnChips)\n"]}