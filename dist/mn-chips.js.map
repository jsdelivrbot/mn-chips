{"version":3,"sources":["scripts/mn-chips.class.js"],"names":["MnChips","self","_this","_ret","_classCallCheck","this","input","querySelector","name","getAttribute","setAddEvents","setValue","_possibleConstructorReturn","value","placeholder","valueAlreadyUsed","indexOf","option","chips","insertAdjacentHTML","lastOption","setTimeout","checked","_this2","document","createElement","classList","add","appendChild","Array","from","querySelectorAll","forEach","removeChild","addChip","textContent","_this3","addEventListener","remove","event","key","preventDefault","values","_this4","isArray","innerHTML","options","window","MnInput","customElements","define"],"mappings":"sxCAAMA,QAAAA,SAAAA,iBACJ,QAAAA,SAAYC,MAAM,GAAAC,OAAAC,IAQhB,OARgBC,iBAAAC,KAAAL,SAChBC,KAAAA,MAAAA,2BAAAA,MAAAA,QAAAA,WAAAA,OAAAA,eAAAA,UAAAA,KAAAA,KAAaA,OACbC,MAAKI,MAAQJ,MAAKK,cAAc,SAChCL,MAAKM,KAAON,MAAKO,aAAa,QAC9BP,MAAKQ,eAELR,MAAKS,WAELR,KAAOF,KAAPW,2BAAAV,MAAAC,oGAGMU,MAAOC,aACb,GAAMC,kBAAmBV,KAAKQ,MAAMG,QAAQH,QAAU,CACtD,IAAIA,QAAUE,iBAAkB,CAC9BD,YAAcA,YAAAA,eACKA,YACf,EAEJ,IAAMG,QAAAA,uDAEKJ,MAFL,oBAGIR,KAAKG,KAHT,cAIFM,YAJE,WAMNT,MAAKa,MAAMC,mBAAmB,YAAaF,OAC3C,IAAMG,YAAaf,KAAKa,MAAMX,cAAc,uBAC5Cc,YAAW,WACTD,WAAWE,SAAU,GACpB,GACHjB,KAAKC,MAAMO,MAAQ,uCAIZ,GAAAU,QAAAlB,IACTA,MAAKa,MAAQM,SAASC,cAAc,OACpCpB,KAAKa,MAAMQ,UAAUC,IAAI,UACzBtB,KAAKuB,YAAYvB,KAAKa,OAENW,MAAMC,KAAKzB,KAAK0B,iBAAiB,WACzCC,QAAQ,SAAAf,QACdM,OAAKU,YAAYhB,QACjBM,OAAKW,QAAQjB,OAAOJ,MAAOI,OAAOkB,sDAKvB,GAAAC,QAAA/B,IACbA,MAAKC,MAAM+B,iBAAiB,OAAQ,WAClCD,OAAKF,QAAQE,OAAK9B,MAAMO,OACxBuB,OAAKV,UAAUY,OAAO,eAGxBjC,KAAKC,MAAM+B,iBAAiB,UAAW,SAAAE,QAEnC,QACA,IACA,KAG2BvB,QAAQuB,MAAMC,MAAQ,IAGjDJ,OAAKF,QAAQE,OAAK9B,MAAMO,OACxB0B,MAAME,gDAKFC,QAAQ,GAAAC,QAAAtC,IAChBqC,QAASb,MAAMe,QAAQF,QACnBA,QACCA,QAELrC,KAAKa,MAAM2B,UAAY,GACvBH,OAAOV,QAAQ,SAAAnB,OAAA,MAAS8B,QAAKT,QAAQrB,yBAIrC,GAAMiC,SAAUzC,KAAKE,cAAc,YACnC,OAAOuC,SACHA,QAAQjC,sBAjFMkC,OAAOC,QAsF7BD,QAAOE,eAAeC,OAAO,WAAYlD","file":"mn-chips.js","sourcesContent":["class MnChips extends window.MnInput {\n  constructor(self) {\n    self = super(self)\n    this.input = this.querySelector('input')\n    this.name = this.getAttribute('name')\n    this.setAddEvents()\n\n    this.setValue()\n\n    return self\n  }\n\n  addChip(value, placeholder) {\n    const valueAlreadyUsed = this.value.indexOf(value) > -1\n    if (value && !valueAlreadyUsed) {\n      placeholder = placeholder\n        ? `placeholder=${placeholder}`\n        : ''\n\n      const option = `<mn-option\n        class=\"natural\"\n        value=\"${value}\"\n        name=\"${this.name}\"\n        ${placeholder}\n      >`\n      this.chips.insertAdjacentHTML('beforeend', option)\n      const lastOption = this.chips.querySelector('mn-option:last-child')\n      setTimeout(() => {\n        lastOption.checked = true\n      }, 0)\n      this.input.value = ''\n    }\n  }\n\n  setValue() {\n    this.chips = document.createElement('div')\n    this.chips.classList.add('values')\n    this.appendChild(this.chips)\n\n    const options = Array.from(this.querySelectorAll('option'))\n    options.forEach(option => {\n      this.removeChild(option)\n      this.addChip(option.value, option.textContent)\n    })\n\n  }\n\n  setAddEvents() {\n    this.input.addEventListener('blur', () => {\n      this.addChip(this.input.value)\n      this.classList.remove('has-value')\n    })\n\n    this.input.addEventListener('keydown', event => {\n      const enterKeys = [\n        'Enter',\n        ',',\n        ' ',\n      ]\n\n      const isEnterKey = enterKeys.indexOf(event.key) > -1\n\n      if (isEnterKey) {\n        this.addChip(this.input.value)\n        event.preventDefault()\n      }\n    })\n  }\n\n  set value(values) {\n    values = Array.isArray(values)\n      ? values\n      : [values]\n\n    this.chips.innerHTML = ''\n    values.forEach(value => this.addChip(value))\n  }\n\n  get value() {\n    const options = this.querySelector('mn-option')\n    return options\n      ? options.value\n      : []\n  }\n}\n\nwindow.customElements.define('mn-chips', MnChips)\n"]}